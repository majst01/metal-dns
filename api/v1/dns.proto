syntax = "proto3";

package v1;

option go_package = "./v1";

import "google/protobuf/wrappers.proto";

service DomainService {
	rpc List(DomainsListRequest) returns (DomainsResponse);
	rpc Get(DomainGetRequest) returns (DomainResponse);
	rpc Create(DomainCreateRequest) returns (DomainResponse);
	rpc Delete(DomainDeleteRequest) returns (DomainResponse);
}
service RecordService {
    rpc List(RecordsListRequest) returns (RecordsResponse);
	rpc Get(RecordGetRequest) returns (RecordResponse);
	rpc Delete(RecordDeleteRequest) returns (RecordResponse);
	rpc Update(RecordUpdateRequest) returns (RecordResponse);
	rpc Create(RecordCreateRequest) returns (RecordResponse);
}

// Domains

message Domain {
	string name = 1;
	uint32 ttl = 2;
	string zone_file = 3;
}

message DomainsListRequest {
}
message DomainGetRequest {
    string name = 1;
}
message DomainCreateRequest {
    string name = 1;
    repeated string nameservers = 2;
}
message DomainDeleteRequest {
    string name = 1;
}
message DomainsResponse {
    repeated Domain domains = 1;
}
message DomainResponse {
    Domain domain = 1;
}

// Records

message Record {
	RecordType type = 1;
	string name = 2;
	string data = 3;
	int32 priority = 4;
	uint32 port = 5;
	uint32 ttl = 6;
	int32 weight = 7;
	int32 flags = 8;
	string tag = 9;
}

enum RecordType {
	A = 0;
	AAAA = 2;
	CNAME = 3;
	MX = 4;
	NS = 5;
	TXT = 6;
	RP = 7;
	SOA = 8;
	HINFO = 9;
	SRV = 10;
	DNANE =11;
	TLSA = 12;
	DS = 13;
	CAA = 14;
	ANY = 15;
}

message RecordsListRequest {
	string domain = 1;
    RecordType type = 2;
    google.protobuf.StringValue name = 3;
}
message RecordGetRequest {
    string uuid = 1;
}
message RecordCreateRequest {
    RecordType type = 1;
	string name = 2;
	string data = 3;
	int32 priority = 4;
	uint32 port = 5;
	uint32 ttl = 6;
	int32 weight = 7;
	int32 flags = 8;
    string tag = 9;
}
message RecordUpdateRequest {
    string uuid = 1;
    RecordType type = 2;
	string name = 3;
	string data = 4;
	int32 priority = 5;
	uint32 port = 6;
	uint32 ttl = 7;
	int32 weight = 8;
	int32 flags = 9;
	string tag = 10;
}
message RecordDeleteRequest {
	RecordType type = 1;
	string name = 2;
	string data = 3;
}

message RecordsResponse {
    repeated Record records = 1;
}
message RecordResponse {
    Record record = 1;
}