// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/v1/dns.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordType int32

const (
	RecordType_UNKNOWN    RecordType = 0
	RecordType_A          RecordType = 1
	RecordType_A6         RecordType = 2
	RecordType_AAAA       RecordType = 3
	RecordType_AFSDB      RecordType = 4
	RecordType_ALIAS      RecordType = 5
	RecordType_ANY        RecordType = 6
	RecordType_CAA        RecordType = 7
	RecordType_CDNSKEY    RecordType = 8
	RecordType_CDS        RecordType = 9
	RecordType_CERT       RecordType = 10
	RecordType_CNAME      RecordType = 11
	RecordType_DHCID      RecordType = 12
	RecordType_DLV        RecordType = 13
	RecordType_DNAME      RecordType = 14
	RecordType_DNSKEY     RecordType = 15
	RecordType_DS         RecordType = 16
	RecordType_EUI48      RecordType = 17
	RecordType_EUI64      RecordType = 18
	RecordType_HINFO      RecordType = 19
	RecordType_IPSECKEY   RecordType = 20
	RecordType_KEY        RecordType = 21
	RecordType_KX         RecordType = 22
	RecordType_LOC        RecordType = 23
	RecordType_LUA        RecordType = 24
	RecordType_MAILA      RecordType = 25
	RecordType_MAILB      RecordType = 26
	RecordType_MINFO      RecordType = 27
	RecordType_MR         RecordType = 28
	RecordType_MX         RecordType = 29
	RecordType_NAPTR      RecordType = 30
	RecordType_NS         RecordType = 31
	RecordType_NSEC       RecordType = 32
	RecordType_NSEC3      RecordType = 33
	RecordType_NSEC3PARAM RecordType = 34
	RecordType_OPENPGPKEY RecordType = 35
	RecordType_PTR        RecordType = 36
	RecordType_RKEY       RecordType = 37
	RecordType_RP         RecordType = 38
	RecordType_RRSIG      RecordType = 39
	RecordType_SIG        RecordType = 40
	RecordType_SMIMEA     RecordType = 41
	RecordType_SOA        RecordType = 42
	RecordType_SPF        RecordType = 43
	RecordType_SRV        RecordType = 44
	RecordType_SSHFP      RecordType = 45
	RecordType_TKEY       RecordType = 46
	RecordType_TLSA       RecordType = 47
	RecordType_TSIG       RecordType = 48
	RecordType_TXT        RecordType = 49
	RecordType_URI        RecordType = 50
	RecordType_WKS        RecordType = 51
	// keep this always the highest number
	RecordType_ZZZ RecordType = 52
)

// Enum value maps for RecordType.
var (
	RecordType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "A",
		2:  "A6",
		3:  "AAAA",
		4:  "AFSDB",
		5:  "ALIAS",
		6:  "ANY",
		7:  "CAA",
		8:  "CDNSKEY",
		9:  "CDS",
		10: "CERT",
		11: "CNAME",
		12: "DHCID",
		13: "DLV",
		14: "DNAME",
		15: "DNSKEY",
		16: "DS",
		17: "EUI48",
		18: "EUI64",
		19: "HINFO",
		20: "IPSECKEY",
		21: "KEY",
		22: "KX",
		23: "LOC",
		24: "LUA",
		25: "MAILA",
		26: "MAILB",
		27: "MINFO",
		28: "MR",
		29: "MX",
		30: "NAPTR",
		31: "NS",
		32: "NSEC",
		33: "NSEC3",
		34: "NSEC3PARAM",
		35: "OPENPGPKEY",
		36: "PTR",
		37: "RKEY",
		38: "RP",
		39: "RRSIG",
		40: "SIG",
		41: "SMIMEA",
		42: "SOA",
		43: "SPF",
		44: "SRV",
		45: "SSHFP",
		46: "TKEY",
		47: "TLSA",
		48: "TSIG",
		49: "TXT",
		50: "URI",
		51: "WKS",
		52: "ZZZ",
	}
	RecordType_value = map[string]int32{
		"UNKNOWN":    0,
		"A":          1,
		"A6":         2,
		"AAAA":       3,
		"AFSDB":      4,
		"ALIAS":      5,
		"ANY":        6,
		"CAA":        7,
		"CDNSKEY":    8,
		"CDS":        9,
		"CERT":       10,
		"CNAME":      11,
		"DHCID":      12,
		"DLV":        13,
		"DNAME":      14,
		"DNSKEY":     15,
		"DS":         16,
		"EUI48":      17,
		"EUI64":      18,
		"HINFO":      19,
		"IPSECKEY":   20,
		"KEY":        21,
		"KX":         22,
		"LOC":        23,
		"LUA":        24,
		"MAILA":      25,
		"MAILB":      26,
		"MINFO":      27,
		"MR":         28,
		"MX":         29,
		"NAPTR":      30,
		"NS":         31,
		"NSEC":       32,
		"NSEC3":      33,
		"NSEC3PARAM": 34,
		"OPENPGPKEY": 35,
		"PTR":        36,
		"RKEY":       37,
		"RP":         38,
		"RRSIG":      39,
		"SIG":        40,
		"SMIMEA":     41,
		"SOA":        42,
		"SPF":        43,
		"SRV":        44,
		"SSHFP":      45,
		"TKEY":       46,
		"TLSA":       47,
		"TSIG":       48,
		"TXT":        49,
		"URI":        50,
		"WKS":        51,
		"ZZZ":        52,
	}
)

func (x RecordType) Enum() *RecordType {
	p := new(RecordType)
	*p = x
	return p
}

func (x RecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_dns_proto_enumTypes[0].Descriptor()
}

func (RecordType) Type() protoreflect.EnumType {
	return &file_api_v1_dns_proto_enumTypes[0]
}

func (x RecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordType.Descriptor instead.
func (RecordType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{0}
}

// Tokens
type TokenServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer      string               `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Domains     []string             `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	Permissions []string             `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Expires     *durationpb.Duration `protobuf:"bytes,4,opt,name=expires,proto3" json:"expires,omitempty"`
}

func (x *TokenServiceCreateRequest) Reset() {
	*x = TokenServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenServiceCreateRequest) ProtoMessage() {}

func (x *TokenServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*TokenServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{0}
}

func (x *TokenServiceCreateRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenServiceCreateRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *TokenServiceCreateRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *TokenServiceCreateRequest) GetExpires() *durationpb.Duration {
	if x != nil {
		return x.Expires
	}
	return nil
}

type TokenServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenServiceCreateResponse) Reset() {
	*x = TokenServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenServiceCreateResponse) ProtoMessage() {}

func (x *TokenServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*TokenServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{1}
}

func (x *TokenServiceCreateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ttl         uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	ZoneFile    string   `protobuf:"bytes,4,opt,name=zone_file,json=zoneFile,proto3" json:"zone_file,omitempty"`
	Url         string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Nameservers []string `protobuf:"bytes,6,rep,name=nameservers,proto3" json:"nameservers,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{2}
}

func (x *Domain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Domain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Domain) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Domain) GetZoneFile() string {
	if x != nil {
		return x.ZoneFile
	}
	return ""
}

func (x *Domain) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Domain) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

type DomainServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []string `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DomainServiceListRequest) Reset() {
	*x = DomainServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceListRequest) ProtoMessage() {}

func (x *DomainServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceListRequest.ProtoReflect.Descriptor instead.
func (*DomainServiceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{3}
}

func (x *DomainServiceListRequest) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DomainServiceGetRequest) Reset() {
	*x = DomainServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceGetRequest) ProtoMessage() {}

func (x *DomainServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceGetRequest.ProtoReflect.Descriptor instead.
func (*DomainServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{4}
}

func (x *DomainServiceGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DomainServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nameservers []string `protobuf:"bytes,2,rep,name=nameservers,proto3" json:"nameservers,omitempty"`
	Url         *string  `protobuf:"bytes,5,opt,name=url,proto3,oneof" json:"url,omitempty"`
}

func (x *DomainServiceCreateRequest) Reset() {
	*x = DomainServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceCreateRequest) ProtoMessage() {}

func (x *DomainServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*DomainServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{5}
}

func (x *DomainServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainServiceCreateRequest) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

func (x *DomainServiceCreateRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type DomainServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nameservers []string `protobuf:"bytes,2,rep,name=nameservers,proto3" json:"nameservers,omitempty"`
	Url         *string  `protobuf:"bytes,5,opt,name=url,proto3,oneof" json:"url,omitempty"`
}

func (x *DomainServiceUpdateRequest) Reset() {
	*x = DomainServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceUpdateRequest) ProtoMessage() {}

func (x *DomainServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*DomainServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{6}
}

func (x *DomainServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainServiceUpdateRequest) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

func (x *DomainServiceUpdateRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type DomainServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DomainServiceDeleteRequest) Reset() {
	*x = DomainServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceDeleteRequest) ProtoMessage() {}

func (x *DomainServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*DomainServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{7}
}

func (x *DomainServiceDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DomainServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []*Domain `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DomainServiceListResponse) Reset() {
	*x = DomainServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceListResponse) ProtoMessage() {}

func (x *DomainServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceListResponse.ProtoReflect.Descriptor instead.
func (*DomainServiceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{8}
}

func (x *DomainServiceListResponse) GetDomains() []*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *Domain `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *DomainServiceGetResponse) Reset() {
	*x = DomainServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceGetResponse) ProtoMessage() {}

func (x *DomainServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceGetResponse.ProtoReflect.Descriptor instead.
func (*DomainServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{9}
}

func (x *DomainServiceGetResponse) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

type DomainServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *Domain `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *DomainServiceUpdateResponse) Reset() {
	*x = DomainServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceUpdateResponse) ProtoMessage() {}

func (x *DomainServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*DomainServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{10}
}

func (x *DomainServiceUpdateResponse) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

type DomainServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *Domain `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *DomainServiceCreateResponse) Reset() {
	*x = DomainServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceCreateResponse) ProtoMessage() {}

func (x *DomainServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*DomainServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{11}
}

func (x *DomainServiceCreateResponse) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

type DomainServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain *Domain `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *DomainServiceDeleteResponse) Reset() {
	*x = DomainServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainServiceDeleteResponse) ProtoMessage() {}

func (x *DomainServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*DomainServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{12}
}

func (x *DomainServiceDeleteResponse) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     RecordType `protobuf:"varint,1,opt,name=type,proto3,enum=api.v1.RecordType" json:"type,omitempty"`
	Name     string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data     string     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Priority int32      `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Port     uint32     `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Ttl      uint32     `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Weight   int32      `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Flags    int32      `protobuf:"varint,8,opt,name=flags,proto3" json:"flags,omitempty"`
	Tag      string     `protobuf:"bytes,9,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{13}
}

func (x *Record) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *Record) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Record) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Record) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Record) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Record) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Record) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Record) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Record) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type RecordServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Type   RecordType `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.RecordType" json:"type,omitempty"`
	Name   *string    `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *RecordServiceListRequest) Reset() {
	*x = RecordServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceListRequest) ProtoMessage() {}

func (x *RecordServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceListRequest.ProtoReflect.Descriptor instead.
func (*RecordServiceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{14}
}

func (x *RecordServiceListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RecordServiceListRequest) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *RecordServiceListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type RecordServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     RecordType `protobuf:"varint,1,opt,name=type,proto3,enum=api.v1.RecordType" json:"type,omitempty"`
	Name     string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data     string     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Priority int32      `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Port     uint32     `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Ttl      uint32     `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Weight   int32      `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Flags    int32      `protobuf:"varint,8,opt,name=flags,proto3" json:"flags,omitempty"`
	Tag      string     `protobuf:"bytes,9,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *RecordServiceCreateRequest) Reset() {
	*x = RecordServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceCreateRequest) ProtoMessage() {}

func (x *RecordServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*RecordServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{15}
}

func (x *RecordServiceCreateRequest) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *RecordServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordServiceCreateRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RecordServiceCreateRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RecordServiceCreateRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RecordServiceCreateRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *RecordServiceCreateRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RecordServiceCreateRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *RecordServiceCreateRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type RecordServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type     RecordType `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.RecordType" json:"type,omitempty"`
	Name     string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Data     string     `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Priority int32      `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Port     uint32     `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Ttl      uint32     `protobuf:"varint,7,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Weight   int32      `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Flags    int32      `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	Tag      string     `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *RecordServiceUpdateRequest) Reset() {
	*x = RecordServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceUpdateRequest) ProtoMessage() {}

func (x *RecordServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*RecordServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{16}
}

func (x *RecordServiceUpdateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordServiceUpdateRequest) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *RecordServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordServiceUpdateRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RecordServiceUpdateRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RecordServiceUpdateRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RecordServiceUpdateRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *RecordServiceUpdateRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RecordServiceUpdateRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *RecordServiceUpdateRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type RecordServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type RecordType `protobuf:"varint,1,opt,name=type,proto3,enum=api.v1.RecordType" json:"type,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data string     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RecordServiceDeleteRequest) Reset() {
	*x = RecordServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceDeleteRequest) ProtoMessage() {}

func (x *RecordServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*RecordServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{17}
}

func (x *RecordServiceDeleteRequest) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *RecordServiceDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordServiceDeleteRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RecordServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *RecordServiceListResponse) Reset() {
	*x = RecordServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceListResponse) ProtoMessage() {}

func (x *RecordServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceListResponse.ProtoReflect.Descriptor instead.
func (*RecordServiceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{18}
}

func (x *RecordServiceListResponse) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

type RecordServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RecordServiceGetResponse) Reset() {
	*x = RecordServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceGetResponse) ProtoMessage() {}

func (x *RecordServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceGetResponse.ProtoReflect.Descriptor instead.
func (*RecordServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{19}
}

func (x *RecordServiceGetResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type RecordServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RecordServiceDeleteResponse) Reset() {
	*x = RecordServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceDeleteResponse) ProtoMessage() {}

func (x *RecordServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*RecordServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{20}
}

func (x *RecordServiceDeleteResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type RecordServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RecordServiceUpdateResponse) Reset() {
	*x = RecordServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceUpdateResponse) ProtoMessage() {}

func (x *RecordServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*RecordServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{21}
}

func (x *RecordServiceUpdateResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type RecordServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RecordServiceCreateResponse) Reset() {
	*x = RecordServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_dns_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordServiceCreateResponse) ProtoMessage() {}

func (x *RecordServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_dns_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*RecordServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_dns_proto_rawDescGZIP(), []int{22}
}

func (x *RecordServiceCreateResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

var File_api_v1_dns_proto protoreflect.FileDescriptor

var file_api_v1_dns_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x1a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x2d, 0x0a,
	0x17, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x1a,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x22,
	0x71, 0x0a, 0x1a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75,
	0x72, 0x6c, 0x22, 0x30, 0x0a, 0x1a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x19, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x42, 0x0a, 0x18, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0x45, 0x0a, 0x1b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x45, 0x0a, 0x1b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x45, 0x0a,
	0x1b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x7c, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xee, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0x82, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x6c, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x18, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x45,
	0x0a, 0x1b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x1b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2a, 0xa6, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x05, 0x0a, 0x01, 0x41, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x36, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x41, 0x41, 0x41, 0x41, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x46, 0x53, 0x44,
	0x42, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x49, 0x41, 0x53, 0x10, 0x05, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x41, 0x10, 0x07,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x44, 0x4e, 0x53, 0x4b, 0x45, 0x59, 0x10, 0x08, 0x12, 0x07, 0x0a,
	0x03, 0x43, 0x44, 0x53, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x52, 0x54, 0x10, 0x0a,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x48, 0x43, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4c, 0x56, 0x10, 0x0d, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4e,
	0x53, 0x4b, 0x45, 0x59, 0x10, 0x0f, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x53, 0x10, 0x10, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x55, 0x49, 0x34, 0x38, 0x10, 0x11, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x55, 0x49,
	0x36, 0x34, 0x10, 0x12, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x13, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x50, 0x53, 0x45, 0x43, 0x4b, 0x45, 0x59, 0x10, 0x14, 0x12, 0x07, 0x0a,
	0x03, 0x4b, 0x45, 0x59, 0x10, 0x15, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x58, 0x10, 0x16, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x4f, 0x43, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x55, 0x41, 0x10, 0x18,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x49, 0x4c, 0x41, 0x10, 0x19, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x41, 0x49, 0x4c, 0x42, 0x10, 0x1a, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x1b, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x52, 0x10, 0x1c, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x58, 0x10,
	0x1d, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x41, 0x50, 0x54, 0x52, 0x10, 0x1e, 0x12, 0x06, 0x0a, 0x02,
	0x4e, 0x53, 0x10, 0x1f, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x53, 0x45, 0x43, 0x10, 0x20, 0x12, 0x09,
	0x0a, 0x05, 0x4e, 0x53, 0x45, 0x43, 0x33, 0x10, 0x21, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x53, 0x45,
	0x43, 0x33, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x10, 0x22, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x45,
	0x4e, 0x50, 0x47, 0x50, 0x4b, 0x45, 0x59, 0x10, 0x23, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x54, 0x52,
	0x10, 0x24, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4b, 0x45, 0x59, 0x10, 0x25, 0x12, 0x06, 0x0a, 0x02,
	0x52, 0x50, 0x10, 0x26, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x52, 0x53, 0x49, 0x47, 0x10, 0x27, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x49, 0x47, 0x10, 0x28, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4d, 0x49, 0x4d,
	0x45, 0x41, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x41, 0x10, 0x2a, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x50, 0x46, 0x10, 0x2b, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x52, 0x56, 0x10, 0x2c, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x53, 0x48, 0x46, 0x50, 0x10, 0x2d, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4b,
	0x45, 0x59, 0x10, 0x2e, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4c, 0x53, 0x41, 0x10, 0x2f, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x53, 0x49, 0x47, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x58, 0x54, 0x10,
	0x31, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x10, 0x32, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x4b,
	0x53, 0x10, 0x33, 0x12, 0x07, 0x0a, 0x03, 0x5a, 0x5a, 0x5a, 0x10, 0x34, 0x32, 0x5f, 0x0a, 0x0c,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9f, 0x03,
	0x0a, 0x0d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xd5, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x51, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x7a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x44, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61,
	0x6a, 0x73, 0x74, 0x30, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2d, 0x64, 0x6e, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70,
	0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_dns_proto_rawDescOnce sync.Once
	file_api_v1_dns_proto_rawDescData = file_api_v1_dns_proto_rawDesc
)

func file_api_v1_dns_proto_rawDescGZIP() []byte {
	file_api_v1_dns_proto_rawDescOnce.Do(func() {
		file_api_v1_dns_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_dns_proto_rawDescData)
	})
	return file_api_v1_dns_proto_rawDescData
}

var file_api_v1_dns_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_v1_dns_proto_goTypes = []interface{}{
	(RecordType)(0),                     // 0: api.v1.RecordType
	(*TokenServiceCreateRequest)(nil),   // 1: api.v1.TokenServiceCreateRequest
	(*TokenServiceCreateResponse)(nil),  // 2: api.v1.TokenServiceCreateResponse
	(*Domain)(nil),                      // 3: api.v1.Domain
	(*DomainServiceListRequest)(nil),    // 4: api.v1.DomainServiceListRequest
	(*DomainServiceGetRequest)(nil),     // 5: api.v1.DomainServiceGetRequest
	(*DomainServiceCreateRequest)(nil),  // 6: api.v1.DomainServiceCreateRequest
	(*DomainServiceUpdateRequest)(nil),  // 7: api.v1.DomainServiceUpdateRequest
	(*DomainServiceDeleteRequest)(nil),  // 8: api.v1.DomainServiceDeleteRequest
	(*DomainServiceListResponse)(nil),   // 9: api.v1.DomainServiceListResponse
	(*DomainServiceGetResponse)(nil),    // 10: api.v1.DomainServiceGetResponse
	(*DomainServiceUpdateResponse)(nil), // 11: api.v1.DomainServiceUpdateResponse
	(*DomainServiceCreateResponse)(nil), // 12: api.v1.DomainServiceCreateResponse
	(*DomainServiceDeleteResponse)(nil), // 13: api.v1.DomainServiceDeleteResponse
	(*Record)(nil),                      // 14: api.v1.Record
	(*RecordServiceListRequest)(nil),    // 15: api.v1.RecordServiceListRequest
	(*RecordServiceCreateRequest)(nil),  // 16: api.v1.RecordServiceCreateRequest
	(*RecordServiceUpdateRequest)(nil),  // 17: api.v1.RecordServiceUpdateRequest
	(*RecordServiceDeleteRequest)(nil),  // 18: api.v1.RecordServiceDeleteRequest
	(*RecordServiceListResponse)(nil),   // 19: api.v1.RecordServiceListResponse
	(*RecordServiceGetResponse)(nil),    // 20: api.v1.RecordServiceGetResponse
	(*RecordServiceDeleteResponse)(nil), // 21: api.v1.RecordServiceDeleteResponse
	(*RecordServiceUpdateResponse)(nil), // 22: api.v1.RecordServiceUpdateResponse
	(*RecordServiceCreateResponse)(nil), // 23: api.v1.RecordServiceCreateResponse
	(*durationpb.Duration)(nil),         // 24: google.protobuf.Duration
}
var file_api_v1_dns_proto_depIdxs = []int32{
	24, // 0: api.v1.TokenServiceCreateRequest.expires:type_name -> google.protobuf.Duration
	3,  // 1: api.v1.DomainServiceListResponse.domains:type_name -> api.v1.Domain
	3,  // 2: api.v1.DomainServiceGetResponse.domain:type_name -> api.v1.Domain
	3,  // 3: api.v1.DomainServiceUpdateResponse.domain:type_name -> api.v1.Domain
	3,  // 4: api.v1.DomainServiceCreateResponse.domain:type_name -> api.v1.Domain
	3,  // 5: api.v1.DomainServiceDeleteResponse.domain:type_name -> api.v1.Domain
	0,  // 6: api.v1.Record.type:type_name -> api.v1.RecordType
	0,  // 7: api.v1.RecordServiceListRequest.type:type_name -> api.v1.RecordType
	0,  // 8: api.v1.RecordServiceCreateRequest.type:type_name -> api.v1.RecordType
	0,  // 9: api.v1.RecordServiceUpdateRequest.type:type_name -> api.v1.RecordType
	0,  // 10: api.v1.RecordServiceDeleteRequest.type:type_name -> api.v1.RecordType
	14, // 11: api.v1.RecordServiceListResponse.records:type_name -> api.v1.Record
	14, // 12: api.v1.RecordServiceGetResponse.record:type_name -> api.v1.Record
	14, // 13: api.v1.RecordServiceDeleteResponse.record:type_name -> api.v1.Record
	14, // 14: api.v1.RecordServiceUpdateResponse.record:type_name -> api.v1.Record
	14, // 15: api.v1.RecordServiceCreateResponse.record:type_name -> api.v1.Record
	1,  // 16: api.v1.TokenService.Create:input_type -> api.v1.TokenServiceCreateRequest
	4,  // 17: api.v1.DomainService.List:input_type -> api.v1.DomainServiceListRequest
	5,  // 18: api.v1.DomainService.Get:input_type -> api.v1.DomainServiceGetRequest
	6,  // 19: api.v1.DomainService.Create:input_type -> api.v1.DomainServiceCreateRequest
	7,  // 20: api.v1.DomainService.Update:input_type -> api.v1.DomainServiceUpdateRequest
	8,  // 21: api.v1.DomainService.Delete:input_type -> api.v1.DomainServiceDeleteRequest
	15, // 22: api.v1.RecordService.List:input_type -> api.v1.RecordServiceListRequest
	18, // 23: api.v1.RecordService.Delete:input_type -> api.v1.RecordServiceDeleteRequest
	17, // 24: api.v1.RecordService.Update:input_type -> api.v1.RecordServiceUpdateRequest
	16, // 25: api.v1.RecordService.Create:input_type -> api.v1.RecordServiceCreateRequest
	2,  // 26: api.v1.TokenService.Create:output_type -> api.v1.TokenServiceCreateResponse
	9,  // 27: api.v1.DomainService.List:output_type -> api.v1.DomainServiceListResponse
	10, // 28: api.v1.DomainService.Get:output_type -> api.v1.DomainServiceGetResponse
	12, // 29: api.v1.DomainService.Create:output_type -> api.v1.DomainServiceCreateResponse
	11, // 30: api.v1.DomainService.Update:output_type -> api.v1.DomainServiceUpdateResponse
	13, // 31: api.v1.DomainService.Delete:output_type -> api.v1.DomainServiceDeleteResponse
	19, // 32: api.v1.RecordService.List:output_type -> api.v1.RecordServiceListResponse
	21, // 33: api.v1.RecordService.Delete:output_type -> api.v1.RecordServiceDeleteResponse
	22, // 34: api.v1.RecordService.Update:output_type -> api.v1.RecordServiceUpdateResponse
	23, // 35: api.v1.RecordService.Create:output_type -> api.v1.RecordServiceCreateResponse
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_v1_dns_proto_init() }
func file_api_v1_dns_proto_init() {
	if File_api_v1_dns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_dns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_dns_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_dns_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_api_v1_dns_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_v1_dns_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_dns_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_v1_dns_proto_goTypes,
		DependencyIndexes: file_api_v1_dns_proto_depIdxs,
		EnumInfos:         file_api_v1_dns_proto_enumTypes,
		MessageInfos:      file_api_v1_dns_proto_msgTypes,
	}.Build()
	File_api_v1_dns_proto = out.File
	file_api_v1_dns_proto_rawDesc = nil
	file_api_v1_dns_proto_goTypes = nil
	file_api_v1_dns_proto_depIdxs = nil
}
